namespace Sandbox.Concepts.IO.XML
{
    using System;
    using System.Xml;
    using System.Xml.Serialization;

    public static class Serialization
    {
        public static void SerializeToXml(string filename)
        {
            using var writer = XmlWriter.Create(filename);
            var serializer = new XmlSerializer(typeof(Book));

            var book = new Book
            {
                Title = "Autogenerated Title",
                Price = 99.99m,
                Genre = "Thriller",
                ISBN = "Autogenerated ISBN",
                PublicationDate = DateTime.Now,
            };

            serializer.Serialize(writer, book);
        }

        public static void DeserializeFromXml(string filename)
        {
            var serializer = new XmlSerializer(typeof(Book));

            serializer.UnknownNode += new XmlNodeEventHandler(serializer_UnknownNode!);
            serializer.UnknownAttribute += new XmlAttributeEventHandler(serializer_UnknownAttribute!);

            using var fs = new FileStream(filename, FileMode.Open);

            var book = (Book?)serializer.Deserialize(fs);

            Console.WriteLine(book?.Title);
        }

        public static void serializer_UnknownNode(object sender, XmlNodeEventArgs e)
        {
            Console.WriteLine($"Unknown Node: {e.Name}\t{e.Text}");
        }

        public static void serializer_UnknownAttribute(object sender, XmlAttributeEventArgs e)
        {
            var attr = e.Attr;
            Console.WriteLine($"Unknown attribute {attr.Name} = {attr.Value}");
        }
    }
}
